#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
"""
import os
import sys
from load_env import load_environment

def check_production_readiness():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_environment()
    
    issues = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars = [
        'SECRET_KEY',
        'FLASK_ENV',
        'MAIL_SERVER',
        'MAIL_USERNAME',
        'MAIL_PASSWORD'
    ]
    
    for var in required_vars:
        value = os.environ.get(var)
        if not value:
            issues.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {var}")
        elif var == 'SECRET_KEY' and len(value) < 32:
            issues.append(f"‚ùå SECRET_KEY —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞)")
        elif var == 'FLASK_ENV' and value != 'production':
            warnings.append(f"‚ö†Ô∏è  FLASK_ENV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ '{value}', —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 'production'")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    required_files = [
        'passenger_wsgi.py',
        '.htaccess',
        'requirements.txt',
        '.env'
    ]
    
    for file in required_files:
        if not os.path.exists(file):
            issues.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
    required_dirs = [
        'uploads',
        'static',
        'templates'
    ]
    
    for dir in required_dirs:
        if not os.path.exists(dir):
            issues.append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞: {dir}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if os.path.exists('uploads'):
        if not os.access('uploads', os.W_OK):
            warnings.append("‚ö†Ô∏è  –ü–∞–ø–∫–∞ 'uploads' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if os.path.exists('.env'):
        with open('.env', 'r') as f:
            content = f.read()
            if 'your_' in content or 'example' in content:
                warnings.append("‚ö†Ô∏è  –í .env —Ñ–∞–π–ª–µ –µ—Å—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–π, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ")
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "="*50)
    
    if issues:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:")
        for issue in issues:
            print(f"  {issue}")
        print()
    
    if warnings:
        print("‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"  {warning}")
        print()
    
    if not issues and not warnings:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É.")
        return True
    elif not issues:
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")
        return True
    else:
        print("‚ùå –ï—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º.")
        return False

if __name__ == '__main__':
    success = check_production_readiness()
    sys.exit(0 if success else 1) 